#!/bin/bash
# This script starts an instance of MATLAB with a loop listing to a fifo pipe
# for matlab commands. This script is meant to prevent the overhead of repeatedly
# starting and stopping instances of MATLAB.

# Usage:
# ./matlab-runner [expression]
# to quit the runner:
# ./matlab-runner exit

IN_PIPE=".inpipe"
OUT_PIPE=".outpipe"
MATLAB_PATH="/vol/share/software/matlab/liacs/R2015b/bin/"
cd "${0%/*}"

# if instance is not running
if [[ ! -e $IN_PIPE ]]; then
    # input pipe
    mkfifo "$IN_PIPE"
    mkfifo "$OUT_PIPE"
    # location of matlab binary

    #MATLAB instructions to watch for commands sent to the IN_PIPE
    RUNNER="while 1;clear;rng('default');[v,o]=system('cat $IN_PIPE');if v;break;end;try;r=evalc(o);catch ME;r=ME.message;end;f=fopen('$OUT_PIPE','a');fprintf(f,'%s\n', strtrim(r));fclose(f);end;exit;"

    # starting MATLAB
    $MATLAB_PATH"matlab" -nodisplay -nojvm -nosplash -r "$RUNNER" > /dev/null &
    echo "disp('Runner ready and waiting');" >> $IN_PIPE
    cat $OUT_PIPE > /dev/null
fi

# check if MATLAB is still running
if ! pidof MATLAB > /dev/null; then
    echo "MATLAB exited"
    rm "$IN_PIPE"
    rm "$OUT_PIPE"
    exit
fi

# check for input commands
if [[ $# -eq 1 ]]; then
    echo $1 >> "$IN_PIPE"
    if [[ $1 == exit ]]; then
        echo "exiting";
        rm "$IN_PIPE"
        rm "$OUT_PIPE"
    else
        cat $OUT_PIPE
    fi
else
    echo "Provide a (single) command to send to MATLAB"
fi
    

