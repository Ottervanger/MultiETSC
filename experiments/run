#!/bin/bash
set -e
# change dir to script location
cd "${0%/*}"

# config
VALIDATION="--folds=5"
UCR="/vol/share/groups/liacs/scratch/UCR/"

# default arguments
SEED=1
DATASET="ECG200"
TIMEOUT="3600"
METHOD="mo"
MO="TRUE"

# standard and computed files and directories
OUTDIR="output"
RUNGROUP="results"
EXECDIR="." # directory containing the algorithm wrapper
ABS_PATH_TRAIN=$UCR$DATASET"/"$DATASET"_TRAIN.tsv"
ABS_PATH_TEST=$UCR$DATASET"/"$DATASET"_TEST.tsv"

# TODO
# Everything is identified based on the seed. This is not a proper id. Ids
# should be generated by hashing the config. Intermediary results should be 
# saved and retrived based on this id to prevent redundant computation.

# TODO
# The MATLAB runner seems to be a weak link in the pipeline. It tends to hang
# presumably after SIGINT interuption. Add a stop and restart procedure to 
# ensure stable state.

while [[ $# -gt 0 ]]; do
case "$1" in
    --seed|-s)
        SEED="$2"
        shift; shift
        ;;
    --dataset|--data|-d)
        DATASET="$2"
        shift; shift
        ;;
    --timeout|--time|-t)
        TIMEOUT="$2"
        shift; shift
        ;;
    --SO)
        METHOD="so"
        MO="FALSE"
        shift
        ;;
    *)
        shift
        ;;
esac
done

# Produce train-validate split from training data
INSTANCE=$(python ../util/validationsplitter.py "$VALIDATION" --seed=$SEED "$ABS_PATH_TRAIN")

# Start the configurator
../paramils/paramils --MO "${MO}" \
                     --algo "./${METHOD}wrapper" \
                     --paramfile "params.txt" \
                     --deterministic 1 \
                     --run_obj "quality" \
                     --overall_obj "mean" \
                     --tuner-timeout "$TIMEOUT" \
                     --seed "$SEED" \
                     --execdir "$EXECDIR" \
                     --outdir "$OUTDIR" \
                     --rungroup "$RUNGROUP" \
                     --instance_file "$INSTANCE" \
                     --validation "false"

# Config validation
# note that we use mo validation regardless of the optimization method
configs=$(realpath "output/results/configs${SEED}.txt")
validation_out=$(realpath "output/results/validation-${SEED}.csv")
>"$validation_out"
while read conf; do
    echo $(./mowrapper "$ABS_PATH_TRAIN" "$ABS_PATH_TEST" $conf)", $conf" | tee -a "$validation_out"
done<"${configs}"

