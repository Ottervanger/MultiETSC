# algorithms
algorithm {ECTS/bin/ects, RelClass/run, ECDIRE/run, SR-CF/run, EARLIEST/run.py, TEASER/run}[ECTS/bin/ects]

# ects parameters
min_support [0.0, 1.0] [0.0]
version {strict,loose}[strict]
min_support | algorithm in {ECTS/bin/ects}
version | algorithm in {ECTS/bin/ects}

# RelClass parameters
tau [1e-30,1.0] [1e-4]l
constr {boxco,Naive,Cheby}[boxco]
ldg {0,1}[0]
tau | algorithm in {RelClass/run}
constr | algorithm in {RelClass/run}
ldg | algorithm in {RelClass/run}

# ECDIRE parameters
acc_perc [0, 100] [100]
doHPO {TRUE,FALSE}[TRUE]
acc_perc | algorithm in {ECDIRE/run}
doHPO | algorithm in {ECDIRE/run}

# SR-CF parameters
optimizer {ga, optim, sa, pso}[ga]
alpha [0.0, 1.0] [0.8]
sr {sr1, sr2}[sr1]
# according to the paper regularization should not be applied when sr1 is used
reg {none, L0, L1}[none]
lambda [0.01,50.0] [0.5]l
reg | sr in {sr2}
lambda | sr in {sr2}
optimizer | algorithm in {SR-CF/run}
alpha | algorithm in {SR-CF/run}
sr | algorithm in {SR-CF/run}

# ECDIRE and SR-CF shared parameters
kernel {gauss,iprod,cauchy,laplace}[iprod]
kernel | algorithm in {ECDIRE/run,SR-CF/run}
distance {euclidean,dtw,edr,fourier,tquest}[euclidean]
distance | algorithm in {ECDIRE/run,SR-CF/run}
dSigma {.01,.02,.05,.1,.2,.5,1,1.5,2,3}[.2]
dSigma | distance in {edr}
dN {1,2,5,10,20,50}[20]
dN | distance in {fourier}
dTau {-3.,-2.,-1.5,-1.,-.5,-.2,-.1,0.,.1,.2,.5,1.,1.5,2.,3.}[0.]
dTau | distance in {tquest}

# EARLIEST
hiddenDim [1,20] [10]i
hiddenDim | algorithm in {EARLIEST/run.py}
cellType {LSTM,GRU,RNN,RNN_TANH,RNN_RELU} [LSTM]
cellType | algorithm in {EARLIEST/run.py}
nLayers [1,5] [1]i
nLayers | algorithm in {EARLIEST/run.py}
LAMBDA [0.0,1.0] [0.5]
LAMBDA | algorithm in {EARLIEST/run.py}
df {1.,.999,.995,.99,.975,.95,.9,1.1,1.05,1.025,1.01,1.005,1.001}[1.]
df | algorithm in {EARLIEST/run.py}
lr {1e-4,1e-3,1e-2,5e-2}[1e-3]
lr | algorithm in {EARLIEST/run.py}
lrf {1.,.999,.995,.99,.975,.95,.9}[1.]
lrf | algorithm in {EARLIEST/run.py}
epochs [1,1000] [20]i
epochs | algorithm in {EARLIEST/run.py}

# TEASER
nClassifiers {10, 15, 20, 30, 50, 100} [20]
nClassifiers | algorithm in {TEASER/run}
threshold [1,10] [2]i
threshold | algorithm in {TEASER/run}
minLen {3,5,10,20,50,100} [3]
minLen | algorithm in {TEASER/run}
maxLen {50,75,100,150,200,300,450} [450]
maxLen | algorithm in {TEASER/run}
svmKernelType { LINEAR, POLY, RBF, SIGMOID } [RBF]
svmKernelType | algorithm in {TEASER/run}
nu {0.5,0.2,0.1,0.05,0.02,0.01,0.005,0.002,0.001} [0.05]
nu | algorithm in {TEASER/run}
