#!/bin/bash

ARGS=()
MO='true'
TIMEOUT="60"
while [[ $# -gt 0 ]]; do
case "$1" in
    -algorithm)
        ALGO="$2"
        shift; shift
        ;;
    --MO)
        MO="$2"
        shift; shift
        ;;
    --timeout)
        TIMEOUT="$2"
        shift; shift
        ;;
    *)
        ARGS+=("$1")
        shift
        ;;
esac
done

function hmean {
    [[ $1 =~ \[(.*),[[:space:]](.*)\] ]]
    hm=$(python -c "print((lambda x,y: 1-(2/((1-x)**-1 + (1-y)**-1)))(${BASH_REMATCH[1]}, ${BASH_REMATCH[2]}))")
    [[ $1 =~ (.*)\[.*\](.*) ]]
    res="${BASH_REMATCH[1]}0, ${hm}${BASH_REMATCH[2]}"
    echo "${res/Result/Result of this algorithm run}"
}

ARGS=${ARGS[*]}
CMD="../${ALGO//[\'\"]/} -data ${ARGS//[\'\"]/}"
ret=$(timeout -s2 $TIMEOUT $CMD)
if [ $? -ne 0 ]; then
    ret="Result: TIMEOUT, 60, [1.0, 1.0], 0"
fi

if [[ $MO == 'true' ]]; then
    echo $ret
else
    hmean $ret
fi
