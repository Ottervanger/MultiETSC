/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // multithreaded FFT
    compile 'com.github.wendykierp:JTransforms:3.1'
    // liblinear in java
    compile 'de.bwaldvogel:liblinear:2.30'
    // efficient collection implementation without "object boxing"
    compile 'com.carrotsearch:hppc:0.7.2'
    // java serialiser
    compile 'com.esotericsoftware:kryo:4.0.1'
    // libSVM in java
    compile "tw.edu.ntu.csie:libsvm:3.17"

    // openCSV
    compile 'com.opencsv:opencsv:3.3'

    // commons.math
    compile "org.apache.commons:commons-math3:3.5"

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// Define the main class for the application
mainClassName = 'paper.Main_TrainProbability'

jar {
    manifest { attributes 'Main-Class': 'ECEC.Ap' }
}

task probJar(type: Jar) {
    manifest { attributes 'Main-Class': 'paper.Main_TrainProbability' }
    baseName = 'TrainProbability'
    from { 
        configurations.testRuntime.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from sourceSets.test.output
    with jar
}

tasks.build.dependsOn(['probJar'])
